/*
Петя - начинающий программист. Сегодня он написал код из n строк.
К сожалению оказалось, что этот код трудно читать. Петя решил исправить это, добавив в различные места пробелы. А точнее, для 
i-й строки ему нужно добавить ровно ai пробелов.
Для добавления пробелов Петя выделяет строку и нажимает на одну из трёх клавиш: Space, Tab, и Backspace. 
При нажатии на Space в строку добавляется один пробел. При нажатии на Tab в строку добавляются четыре пробела. 
При нажатии на Backspace в строке удаляется один пробел. Ему хочется узнать, какое наименьшее количество клавиш придётся нажать, 
чтобы добавить необходимое количество пробелов в каждую строку. Помогите ему!

Формат ввода
Первая строка входных данных содержит одно целое положительное число n(1≤n≤10^5) – количество строк в файле.
Каждая из следующих n строк содержит одно целое неотрицательное число ai(0≤ai≤10^9) – количество пробелов, которые нужно добавить в i-ю строку файла.

Формат вывода
Выведите одно число – минимальное количество нажатий, чтобы добавить в каждой строке необходимое количество пробелов.
Пример
Ввод	            Вывод
5                   8
1
4
12
9
0

Примечания
В примере можно:
1 раз нажать на Space в первой строке.
1 раз нажать на Tab на второй строке.
3 раза нажать на Tab в третьей строке.
2 раза нажать на Tab и один раз нажать на Space в четвёртой строке.
Ничего не нажимать в пятой строке.
В итоге получается 1+1+3+3=8 нажатий. Можно доказать, что нельзя добавить необходимое количество пробелов за 7 нажатий или меньше.
*/

#include <iostream>

using namespace std;

size_t CalcMinPushes(size_t num) {
    size_t cntSpacesAndBacks = 0;
    size_t cntTabs = num / 4;
    if (num % 4 == 3) {
        cntTabs++;
        cntSpacesAndBacks++;
    } else if (num % 4 == 2) {
        cntSpacesAndBacks += 2;
    } else if (num % 4 == 1) cntSpacesAndBacks++;
    return cntTabs + cntSpacesAndBacks;
}

int main()
{
    size_t n = 0, cnt = 0;
    cin >> n;
    while(n--) {
        size_t num = 0;
        cin >> num;
        cnt += CalcMinPushes(num);
    }
    cout << cnt << '\n';

    return 0;
}
