/*
Дан массив a из n чисел. Найдите минимальное количество чисел, после удаления которых попарная разность оставшихся чисел по модулю не будет превышать 1, 
то есть после удаления ни одно число не должно отличаться от какого-либо другого более чем на 1.
Формат ввода
Первая строка содержит одно целое число n (1≤n≤2⋅105) — количество элементов массива a.
Вторая строка содержит n целых чисел a1,a2,…,an (0≤ai≤105) — элементы массива a.

Формат вывода
Выведите одно число — ответ на задачу.

Пример 1
Ввод	
5
1 2 3 4 5
Вывод
3

Пример 2
Ввод	
10
1 1 2 3 5 5 2 2 1 5
Вывод
4

7
1 1 4 4 4 6 6
4

1000
16263 19390 85572 28939 17043 10986 50981 77838 38142 63791 97367 35786 9093 9388 75918 6453 26742 26403 39277 94983 7874 55742 17618 96655 79211 
7 36098 78066 1764 23174 38674 9939 29080 27324 68263 87632 5766 53431 71862 36904 91478 84677 79073 69274 19214 85552 83565 93335 71627 14471 35905 
34072 50311 66237 94256 98841 13593 3812 87216 81787 83898 7388 77712 38763 85322 10094 93291 17980 72115 97851 10661 70556 99767 92480 49250 6258 
27949 94160 39262 50067 64342 99588 30903 84469 67298 25509 57166 69481 45130 74373 80872 94530 62179 77141 59985 75426 7904 41689 14579 72901 38094 
62062 38728 55184 40203 80384 71832 17089 79555 13584 88731 9915 23248 16218 17562 49359 42392 52953 83616 69241 34496 4733 43185 40082 70133 98040 
34169 27650 97797 9248 72913 3217 28823 71549 78520 58264 85374 55166 54559 84468 3900 40378 65340 30928 56949 52934 51227 10976 36510 52575 67300 
71597 81346 31189 53751 12417 89804 77265 31213 39115 82708 16076 49585 17322 19562 28143 52701 26136 51597 36935 17945 15272 95933 62133 69253 87948 
19909 19050 3465 17502 98107 16066 95137 51204 82315 70045 41004 48762 31328 32301 77203 61980 84737 14997 25293 23981 39993 74008 98876 94416 58077 
82514 89073 38410 80071 79723 60185 8717 68246 36982 28104 1390 65174 10634 64070 1047 22634 64102 77991 85976 33887 91636 71786 99772 32746 92366 17379 
18123 41981 56425 97955 74917 70948 16830 98393 24847 76501 54889 29207 11272 6237 27370 80507 59881 86073 5335 13992 92928 7027 11918 50042 78510 3142 
2618 18797 87503 3852 13800 70616 85689 45612 33654 15199 95422 17613 31024 29630 26209 16837 87675 94674 6236 18741 85700 24652 14434 27365 58569 98792 
26066 34255 97992 53592 32081 79500 39264 6417 67502 70387 70599 4199 36854 46985 61877 84927 22375 6399 47547 19630 95867 88040 72306 18971 6512 86258 
1204 7524 45411 1732 4529 41374 3365 98343 76777 73699 4392 11793 89520 3211 72898 14579 44415 80809 22282 882 9971 57736 24652 93140 23382 92082 39290 
42630 49774 43976 88169 78682 46847 1721 7940 13227 47410 45666 6134 47105 94254 91267 26164 18851 51978 87724 44016 79983 48417 78719 82204 94464 87475 
89093 46070 16710 45084 3771 38563 52759 47937 70333 99353 36673 32562 82807 20797 51338 83738 20686 41854 24653 74532 82252 61894 75200 59604 16841 89583 
91086 23898 73634 52568 47831 90163 40498 18740 88611 24861 26270 8391 14770 24652 89109 20598 92851 60309 24652 69006 31290 96322 84579 64254 3939 80884 
21772 18581 19930 78569 58447 19782 24662 68753 82893 95011 14133 67729 22784 96009 97586 25416 17024 86349 33828 47148 11043 75290 63694 63801 80396 50736
 57515 90584 10321 30135 20142 27123 85657 48769 85919 44119 85091 76015 4073 87768 1537 52162 53384 13786 35004 60197 88780 99719 56600 66735 18400 38797 
 50383 34295 63998 77181 86677 21346 98151 79082 71836 73065 73865 74338 10920 8480 80710 50951 94786 17153 11157 24652 46992 16268 44682 27524 30807 37738 
 11903 1506 13620 11760 81900 73733 67594 21406 986 95086 15139 53075 45228 15355 92252 55082 28917 17184 96090 41250 87346 31655 38257 77513 94326 14862 26135 
 64304 14780 22032 16382 61826 18760 35465 62464 43437 93598 93602 7111 54267 67306 11651 23239 86981 90640 20360 66147 91856 66937 69969 75804 14862 87424 
 28750 34859 83393 76904 42055 62172 31711 78721 86872 81944 25718 97633 43344 30072 95372 90020 23720 64791 11160 90501 31442 61265 89227 30287 70171 55552 
 79110 94811 6640 21353 36007 32648 77190 87949 87980 50770 83596 24481 39745 8492 44759 26447 52030 90264 87679 18815 90926 86244 76262 81261 77839 79776 
 90890 30500 66658 36052 12312 59382 38778 81600 30644 88235 34250 35736 86133 52537 60336 36117 85039 50701 29004 85425 64705 78448 8292 99466 41509 8550 
 80930 60660 52767 52810 33772 96092 54688 94512 89866 55542 32119 24652 73637 27579 46450 78594 6819 96615 4942 51374 26459 11549 19541 49712 60686 8232 36461 
 17245 58423 67914 15571 69076 18485 37260 91072 92639 42673 74697 49128 56966 62496 62377 41060 73472 92622 24652 40706 31181 66654 52447 69211 79993 46013 
 48665 23557 15167 5999 24652 38603 88041 70969 70465 71330 54936 61027 83226 25290 67335 1557 14047 61404 1138 94581 2989 14120 84968 46953 90186 78801 48245 
 27548 95412 48995 90166 2100 70814 35650 75470 92573 28712 38456 68376 22186 12023 31027 79241 13760 50364 36369 7164 87151 64733 68053 26211 80352 54494 52046 
 17894 1936 89099 78671 69429 68980 56024 65175 46401 27390 18485 78799 6120 25894 48574 35779 5896 20752 1108 12000 24794 95333 19342 45571 36149 59654 99321 
 38768 2101 43636 50313 16132 2288 65395 98028 68750 11811 24282 79841 1920 28004 88133 4069 74120 87088 70014 7540 78566 37468 27637 65935 29980 32507 77280 
 45980 54949 38457 3600 28043 54068 82650 84573 80747 76446 36412 13401 69178 31037 82104 88383 821 97267 21171 95563 38607 2338 67228 71507 61055 20300 77366 
 31825 28650 51418 37601 39508 9321 36895 71863 44548 85878 47112 15651 76385 31743 75309 79731 74690 24596 69075 51480 36587 22459 64476 51604 82667 66207 
 11503 86046 55538 87205 58949 92110 62257 5679 95759 96780 98925 50832 6802 93475 67400 29392 40468 25571 24652 5342 73682 87904 82361 34490 58486 4479 45344 
 1826 53891 96858 37958 96124 19798 81668 91028 86442 88951 46986 77734 47189 23003 27464 27313 45674 35962 38009 96015 31646 93152 53899 82110 12214 65520 
 66182 4975 21181 99899 88903 29083 27290 33465 53994 33475 79430 59445 63781 1005 39601 99463 91413 45127 32221 1449 13847 72280 2434 249 55795 52140 85741 
 66244 4 94412 82758 69211 24683 81060 53929 75937 48635 95406 1564 16446 21029 9165 70201 2571 46083 41378 88797 35815 22425 59141 72296 51328 41182 29041 
 32551 18890 96314 68323 41577 21644 15467 95860 76659 71117 76142 94370 55421 95576 46691 5839 11571 70591 94991 7802 42095 44335 28615 86248 69529 138 4274 
 23124 84498 41502 76383 45070 15939 47369 69120 61883 91398 20170 40192 2039 41178 76585 25331 47692 4410 24998 60991 26780 13698 54907 31089 34031 14427 93755 
 14204 18191 1626 4701 25482 73921

10
22238 22238 22238 22238 22238 22238 22238 22238 22238 22238

*/

#include <iostream>
#include <map>
#include <algorithm>

using namespace std;

int main() {
    int cnt = 0;
    cin >> cnt;
    map<int, int> num_to_cnt;
    for (int i = 0; i < cnt; ++i) {
        int num;
        cin >> num;
        num_to_cnt[num]++;
    }
    if (cnt == 1) {
        cout << 0 << '\n';
        return 0;
    }
    // for (const auto& [key, value] : num_to_cnt) {
    //     cout << "key: " << key << " value : " << value << '\n';
    // }
    map<int, int> :: iterator it1 = --num_to_cnt.end(), it2 = --num_to_cnt.end();
    it2--;
    int max_cnt_remainig_for_1 = it1->second;
    int max_cnt_remainig_for_2 = -1;
    for (int i = 1; i < num_to_cnt.size(); ++i) {
        if (max_cnt_remainig_for_1 < it1->second) max_cnt_remainig_for_1 = it1->second;
        if (abs(it2->first - it1->first) <= 1) {
            if (max_cnt_remainig_for_2 == -1) max_cnt_remainig_for_2 = it1->second + it2->second;
            else (max_cnt_remainig_for_2 = max(max_cnt_remainig_for_2, it1->second + it2->second));
        }
        it2--;
        it1--;
    }
    cout << cnt - max(max_cnt_remainig_for_1, max_cnt_remainig_for_2) << '\n';
    return 0;
}